extend type Query {
    getUserRoles: [Role!]! @field(resolver: "App\\Http\\GraphQL\\Queries\\RoleQuery@UserRoles")
}

extend type Mutation {
    createRole (input: CreateRoleInput!): Role @create(model: "App\\Models\\Role" flatten: true)
    updateRole (input: UpdateRoleInput!): Role @update(model: "App\\Models\\Role" flatten: true)
    deleteRole (input: DeleteRoleInput!): Role @delete(model: "App\\Models\\Role" flatten: true)
}

type Role {
    id: ID
    name: String!
    userCount: Int
    userInRole: Boolean
    guard_name: String!
    created_at: Date!
    updated_at: DateTime
}

input CreateRoleInput
{
    name: String @rules(apply: ["required"])
}

input UpdateRoleInput
{
    id: ID! @rules(apply: ["required"])
    name: String @rules(apply: ["required"])
}

input DeleteRoleInput {
    id: ID! @rules(apply: ["required"])
}
